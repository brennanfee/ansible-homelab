---
# vim: set ft=yaml.ansible:

- name: Verify Virtualbox Guest Role
  hosts: all
  gather_facts: true
  tasks:
    ### Verify Prereqs

    - name: Gather package facts
      ansible.builtin.package_facts: null

    - name: Verify package is installed
      ansible.builtin.assert:
        that:
          - "'build-essential' in ansible_facts.packages"
          - "'dkms' in ansible_facts.packages"

    ### Check if additions are installed, this should always succeed
    - name: Check if guest additions are installed
      become: true
      ansible.builtin.shell:
        cmd: set -o pipefail && lsmod | grep -i vboxguest
        executable: /bin/bash
      changed_when: false
      register: verify_guest_additions_installed
      failed_when: verify_guest_additions_installed.stdout == ""

    ### Vagrant user setup
    - name: Check if Vagrant user exists
      ansible.builtin.shell:
        cmd: set -o pipefail && /usr/bin/getent passwd vagrant | /usr/bin/wc -l | tr -d ''
        executable: /bin/bash
      register: verify_vagrant_user_exists
      changed_when: false

    - name: Check vagrant user in Virtualbox group
      become: true
      ansible.builtin.user:
        name: vagrant
        groups: vboxsf
        append: true
      check_mode: true
      when: verify_vagrant_user_exists.stdout == "1"
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Check vagrant user is setup in sudo
      become: true
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/vagrant
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      when: verify_vagrant_user_exists.stdout == "1"
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    # - name: Add users to the vagrant group (to allow access to vagrant share)
    #   become: true
    #   ansible.builtin.user:
    #     name: '{{ item }}'
    #     groups: 'vagrant'
    #     append: yes
    #   loop: '{{ vagrant_users }}'
    #   check_mode: yes
    #   when: verify_vagrant_user_exists.stdout == "1"
    #   register: conf
    #   failed_when: (conf is changed) or (conf is failed)

    # ## Check users were added to
    # - name: Add users to the VirtualBox group
    #   become: true
    #   ansible.builtin.user:
    #     name: '{{ item }}'
    #     groups: 'vboxsf'
    #     append: yes
    #   loop: '{{ virtualbox_managers }}'
    #   check_mode: yes
    #   when: ansible_virtualization_type == "virtualbox" and ansible_virtualization_role == "guest"
    #   register: conf
    #   failed_when: (conf is changed) or (conf is failed)

    ## Unattended upgrades is disabled
    - name: Unattended upgrades was disabled
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/99vm-overrides
        line: "// Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      when: ansible_virtualization_type == "virtualbox" and ansible_virtualization_role == "guest"
      register: conf
      failed_when: (conf is changed) or (conf is failed)
