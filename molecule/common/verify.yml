---
# vim: set ft=yaml.ansible:

- name: Verify "Common" Role
  hosts: all
  gather_facts: true
  tasks:
    ### Setup

    - name: Gather package facts
      ansible.builtin.package_facts: null

    ### Apt Configuration
    - name: Check the custom defaults file is Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/90custom-defaults
        line: "// Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Check the proxy config file is Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/apt.conf.d/00apt-proxy
        line: "// Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      when: apt_proxy_url | default("", true) | length > 0
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Verify apt packages are installed
      ansible.builtin.assert:
        that:
          - "'apt-utils' in ansible_facts.packages"
          - "'curl' in ansible_facts.packages"
          - "'wget' in ansible_facts.packages"
          - "'apt-transport-https' in ansible_facts.packages"
          - "'dirmngr' in ansible_facts.packages"
          - "'python3-apt' in ansible_facts.packages"

    - name: Check that apt sources is now Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Debian stable (bullseye) should have the backports
      become: true
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/debian-backports.list
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      when: ansible_distribution == "Debian" and ansible_distribution_release == "bullseye"
        and (apt_include_backports | default(true, true))
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Check Ubuntu Pro integrations with APT has been removed
      become: true
      ansible.builtin.stat:
        path: /etc/apt/apt.conf.d/20apt-esm-hook.conf
        get_checksum: false
      register: common_ubuntu_esm_hook
      failed_when: common_ubuntu_esm_hook.stat.exists

    ### SSH Configuration

    - name: Verify SSH packages are installed
      ansible.builtin.assert:
        that:
          - "'openssh-server' in ansible_facts.packages"
          - "'openssh-client' in ansible_facts.packages"

    - name: Examine if we need to regenerate host keys
      ansible.builtin.stat:
        path: /etc/ssh/ssh_host_keys_regenerated
        get_checksum: false
      register: common_ssh_host_keys_regenerated
      failed_when: not common_ssh_host_keys_regenerated.stat.exists

    - name: Verify the ssh client config is Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/ssh_config
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Verify the sshd daemon config is Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Verify the allow-groups ssh config file is in place and managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config.d/allow-groups.conf
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    ### Sudo Configuration

    - name: Verify Sudo package is installed
      ansible.builtin.assert:
        that:
          - "'sudo' in ansible_facts.packages"

    - name: Allow users in the sudo group to run sudo (with a password)
      become: true
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: ^\%sudo
        line: "%sudo  ALL=(ALL:ALL) ALL"
        validate: visudo -cf %s
        backup: true
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    ### Popularity Contest

    - name: Verify Popularity Contest package is installed (enroll requested)
      ansible.builtin.assert:
        that:
          - "'popularity-contest' in ansible_facts.packages"
      when: enroll_in_popularity_contest | default(false)

    - name: Verify the popularity contest file is Ansible managed (enroll requested)
      become: true
      ansible.builtin.lineinfile:
        path: /etc/popularity-contest.conf
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      when: enroll_in_popularity_contest | default(false)
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Verify Popularity Contest package is not installed (enroll not requested)
      ansible.builtin.assert:
        that:
          - "'popularity-contest' not in ansible_facts.packages"
      when: not (enroll_in_popularity_contest | default(false))

    ### Time Configuration

    - name: Verify Sudo package is installed
      ansible.builtin.assert:
        that:
          - "'systemd-timesyncd' in ansible_facts.packages"

    - name: Set the time zone
      become: true
      community.general.timezone:
        name: "{{ desired_time_zone | default('America/Chicago', true) }}"
        hwclock: UTC
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)

    - name: Verify the timesyncd file is Ansible managed
      become: true
      ansible.builtin.lineinfile:
        path: /etc/systemd/timesyncd.conf
        line: "# Ansible managed: Do NOT edit this file manually!"
        backup: false
      check_mode: true
      register: conf
      failed_when: (conf is changed) or (conf is failed)
